diff --git a/CMakeLists.txt b/CMakeLists.txt
index 262447906f..0d0ebea119 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -794,19 +794,19 @@ function(get_statically_linked_extensions DUCKDB_EXTENSION_NAMES OUT_VARIABLE)
   endif()
 endfunction()
 
-function(link_extension_libraries LIBRARY)
+function(link_extension_libraries LINKAGE LIBRARY)
   get_statically_linked_extensions("${DUCKDB_EXTENSION_NAMES}" STATICALLY_LINKED_EXTENSIONS)
   # Now link against any registered out-of-tree extensions
   foreach(EXT_NAME IN LISTS STATICALLY_LINKED_EXTENSIONS)
     string(TOUPPER ${EXT_NAME} EXT_NAME_UPPERCASE)
     if (${DUCKDB_EXTENSION_${EXT_NAME_UPPERCASE}_SHOULD_LINK})
-      target_link_libraries(${LIBRARY} ${EXT_NAME}_extension)
+      target_link_libraries(${LIBRARY} ${LINKAGE} ${EXT_NAME}_extension)
     endif()
   endforeach()
 endfunction()
 
-function(link_threads LIBRARY)
-    target_link_libraries(${LIBRARY} Threads::Threads)
+function(link_threads LINKAGE LIBRARY)
+    target_link_libraries(${LIBRARY} ${LINKAGE} Threads::Threads)
 endfunction()
 
 # Deploys extensions to a local repository (a folder structure that contains the duckdb version + binary arch)
@@ -1447,7 +1447,7 @@ if(NOT DUCKDB_EXPLICIT_PLATFORM)
   set(VERSION_SOURCES tools/utils/test_platform.cpp)
 
   add_executable(duckdb_platform_binary ${VERSION_SOURCES})
-  link_threads(duckdb_platform_binary)
+  link_threads(PUBLIC duckdb_platform_binary)
 
   set_target_properties(duckdb_platform_binary PROPERTIES OUTPUT_NAME duckdb_platform_binary)
   set_target_properties(duckdb_platform_binary PROPERTIES RUNTIME_OUTPUT_DIRECTORY
diff --git a/extension/icu/CMakeLists.txt b/extension/icu/CMakeLists.txt
index 65cbe3837c..a7786706e8 100644
--- a/extension/icu/CMakeLists.txt
+++ b/extension/icu/CMakeLists.txt
@@ -25,7 +25,7 @@ set(ICU_EXTENSION_FILES
     icu-timezone.cpp)
 
 build_static_extension(icu ${ICU_EXTENSION_FILES})
-link_threads(icu_extension)
+link_threads("" icu_extension)
 disable_target_warnings(icu_extension)
 set(PARAMETERS "-no-warnings")
 build_loadable_extension(icu ${PARAMETERS} ${ICU_EXTENSION_FILES})
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 58adef3fc0..ec54e7ed9f 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -61,14 +61,14 @@ if(AMALGAMATION_BUILD)
 
   add_library(duckdb SHARED "${PROJECT_SOURCE_DIR}/src/amalgamation/duckdb.cpp")
   target_link_libraries(duckdb ${DUCKDB_SYSTEM_LIBS})
-  link_threads(duckdb)
-  link_extension_libraries(duckdb)
+  link_threads(PUBLIC duckdb)
+  link_extension_libraries(PRIVATE duckdb)
 
   add_library(duckdb_static STATIC
               "${PROJECT_SOURCE_DIR}/src/amalgamation/duckdb.cpp")
   target_link_libraries(duckdb_static ${DUCKDB_SYSTEM_LIBS})
-  link_threads(duckdb_static)
-  link_extension_libraries(duckdb_static)
+  link_threads(PUBLIC duckdb_static)
+  link_extension_libraries(PUBLIC duckdb_static)
 
   install(FILES "${PROJECT_SOURCE_DIR}/src/amalgamation/duckdb.hpp"
                 "${PROJECT_SOURCE_DIR}/src/include/duckdb.h"
@@ -131,14 +131,14 @@ else()
     target_sources(duckdb PRIVATE version.rc)
   endif()
 
-  target_link_libraries(duckdb ${DUCKDB_LINK_LIBS})
-  link_threads(duckdb)
-  link_extension_libraries(duckdb)
+  target_link_libraries(duckdb PUBLIC ${DUCKDB_LINK_LIBS})
+  link_threads(PUBLIC duckdb)
+  link_extension_libraries(PRIVATE duckdb)
 
   add_library(duckdb_static STATIC ${ALL_OBJECT_FILES})
-  target_link_libraries(duckdb_static ${DUCKDB_LINK_LIBS})
-  link_threads(duckdb_static)
-  link_extension_libraries(duckdb_static)
+  target_link_libraries(duckdb_static PUBLIC ${DUCKDB_LINK_LIBS})
+  link_threads(PUBLIC duckdb_static)
+  link_extension_libraries( PUBLIC duckdb_static)
 
   target_include_directories(
     duckdb PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
diff --git a/tools/shell/CMakeLists.txt b/tools/shell/CMakeLists.txt
index 49f17a015c..86b377b97e 100644
--- a/tools/shell/CMakeLists.txt
+++ b/tools/shell/CMakeLists.txt
@@ -14,7 +14,7 @@ option(STATIC_LIBCPP "Statically link CLI to libc++" FALSE)
 add_executable(shell ${SHELL_SOURCES})
 target_link_libraries(shell sqlite3_api_wrapper_static
                       ${DUCKDB_EXTRA_LINK_FLAGS})
-link_threads(shell)
+link_threads("" shell)
 if(STATIC_LIBCPP)
   message("Statically linking CLI")
   target_link_libraries(shell -static-libstdc++ -static-libgcc)
diff --git a/tools/sqlite3_api_wrapper/CMakeLists.txt b/tools/sqlite3_api_wrapper/CMakeLists.txt
index e29c33e54b..7d3e15e10a 100644
--- a/tools/sqlite3_api_wrapper/CMakeLists.txt
+++ b/tools/sqlite3_api_wrapper/CMakeLists.txt
@@ -24,12 +24,12 @@ target_link_libraries(sqlite3_api_wrapper_static duckdb_static)
 if(NOT AMALGAMATION_BUILD)
   target_link_libraries(sqlite3_api_wrapper_static duckdb_utf8proc)
 endif()
-link_threads(sqlite3_api_wrapper_static)
+link_threads("" sqlite3_api_wrapper_static)
 
 if(NOT WIN32 AND NOT ZOS)
   add_library(sqlite3_api_wrapper SHARED ${SQLITE_API_WRAPPER_FILES})
   target_link_libraries(sqlite3_api_wrapper duckdb ${DUCKDB_EXTRA_LINK_FLAGS})
-  link_threads(sqlite3_api_wrapper)
+  link_threads("" sqlite3_api_wrapper)
 endif()
 
 include_directories(../../third_party/catch)
